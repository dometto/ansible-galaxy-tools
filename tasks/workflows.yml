---
- name: Create/invoke script virtualenv (Workflows)
  ansible.builtin.pip:
    name:
      - pyyaml
      - bioblend~={{ galaxy_tools_bioblend_version }}
    state: present
    virtualenv: "{{ galaxy_tools_venv_dir }}"
    virtualenv_command: "{{ pip_virtualenv_command | default( 'virtualenv' ) }}"

- name: Create bootstrap user
  when: galaxy_create_bootstrap_user
  ansible.builtin.include_tasks: bootstrap.yml

- name: Place the tool management script
  ansible.builtin.copy: 
    src: install_workflow.py
    dest: "{{ galaxy_tools_base_dir }}/install_workflow.py"

- name: Copy workflows
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ galaxy_tools_base_dir }}/{{ item | basename }}"
  with_items:
    - "{{ galaxy_tools_workflows }}"

- name: Install workflows
  ansible.builtin.command: >
    {{ galaxy_tools_venv_dir }}/bin/python install_workflow.py
    -w '{{ item | basename }}'
    -a {{ galaxy_tools_bootstrap_user_api_key | default(galaxy_tools_api_key) }}
    -g {{ galaxy_tools_galaxy_instance_url }}
    {% if galaxy_tools_galaxy_publish_workflows %}
    -p
    {% endif %}
  args:
    chdir: "{{ galaxy_tools_base_dir }}"
  register: _install_result
  changed_when: "'Workflow already exists' not in _install_result.stdout"
  ignore_errors: "{{ galaxy_tools_ignore_errors }}"
  with_items:
    - "{{ galaxy_tools_workflows }}"

- name: Delete the bootstrapped admin user
  when: galaxy_create_bootstrap_user and galaxy_delete_bootstrap_user
  ansible.builtin.command:
    cmd: >
      {{ galaxy_tools_base_dir }}/manage_bootstrap_user.py
      -d
      -a {{ galaxy_tools_api_key }}
      -g {{ galaxy_tools_galaxy_instance_url }}
      -e {{ galaxy_bootstrap_user_email }}
  register: _galaxy_delete_user
  changed_when: '"Deleted user" in _galaxy_delete_user.stdout'
