---
- name: Check that an admin email has been set
  ansible.builtin.fail:
    msg: "No email for an admin user set. To run data managers, either set galaxy_tools_admin_user_email or enable galaxy_tools_create_bootstrap_user."
  when: not galaxy_tools_admin_user_email

- name: Create/invoke script virtualenv (Data managers)
  ansible.builtin.pip:
    name:
      - ephemeris~={{ galaxy_tools_ephemeris_version }} # Pinned version should make sure ephemeris version matches what the role has been tested with
      - bioblend~={{ galaxy_tools_bioblend_version }}
    state: present
    virtualenv: "{{ galaxy_tools_venv_dir }}"
    virtualenv_command: "{{ pip_virtualenv_command | default( 'virtualenv' ) }}"

- name: Copy galaxy_tools_data_managers
  ansible.builtin.copy:
    src: "{{ galaxy_tools_data_managers }}"
    dest: "{{ galaxy_tools_base_dir }}/data_managers_list.yaml"

- name: Install Data-managers and Genomes
  ansible.builtin.command: >
    {{ galaxy_tools_venv_dir }}/bin/run-data-managers
    -a "{{ galaxy_tools_ops_key }}"
    -u "{{ galaxy_tools_admin_user_email }}"
    -g "{{ galaxy_tools_galaxy_instance_url }}"
    --config "{{ galaxy_tools_base_dir }}/data_managers_list.yaml"
    {% if galaxy_tools_ignore_errors %}
    --ignore-errors
    {% endif %}
  changed_when: "_install_result.stderr.find('Failed jobs: 0') != -1 and 'finished with state ok' in _install_result.stderr"
  ignore_errors: "{{ galaxy_tools_ignore_errors }}"
  register: _install_result
  retries: "{{ galaxy_tools_install_retries }}"
  delay: "{{ galaxy_tools_install_retry_delay }}"
  until: _install_result is not failed
  notify:
    - ansible-galaxy-tools restart galaxy

- name: Display data_managers results
  debug:
    msg:
      - "{{ _install_result.stderr }}"
      - "{{ _install_result.stdout }}"
